import { NzLayoutModule } from 'ng-zorro-antd/layout';
import { NzMenuModule } from 'ng-zorro-antd/menu';
import { NgxPermissionsModule } from 'ngx-permissions';

import { HttpClientModule } from '@angular/common/http';
import { APP_INITIALIZER, InjectionToken, NgModule } from '@angular/core';
import { AngularFireModule } from '@angular/fire';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { EffectsModule } from '@ngrx/effects';
import { StoreModule } from '@ngrx/store';
import { StoreDevtoolsModule } from '@ngrx/store-devtools';
import { AuthenticationStateService, I18nUtil } from '@zsport/api';

import { environment } from '../environments/environment';
import { <%= classify(name) %>AppRoutingModule } from './<%= name %>-app-routing.module';
import { <%= classify(name) %>AppComponent } from './<%= name %>-app.component';
import { <%= classify(name) %>CoreModule } from './core/<%= name %>-core.module';
import { <%= classify(name) %>HeaderModule } from './header/<%= name %>-header.module';
import { <%= classify(name) %>I18nInitializer } from './initializer';
import { <%= classify(name) %>PermissionModule } from './permission/<%= name %>-permission.module';
import { <%= classify(name) %>AdminResolverService } from './resolver';

const ENVIRONMENT = new InjectionToken('ENVIRONMENT');

@NgModule({
    declarations: [<%= classify(name) %>AppComponent],
    imports: [
        BrowserModule,
        BrowserAnimationsModule,
        HttpClientModule,
        AngularFireModule.initializeApp(environment.firebase),
        NzLayoutModule,
        NzMenuModule,
        StoreModule.forRoot({}, {}),
        EffectsModule.forRoot(),
        StoreDevtoolsModule.instrument({
            maxAge: 25,
            logOnly: environment.production,
        }),
        NgxPermissionsModule.forRoot(),
        <%= classify(name) %>AppRoutingModule,
        <%= classify(name) %>CoreModule,
        <%= classify(name) %>HeaderModule,
        <%= classify(name) %>PermissionModule,
    ],
    providers: [
        <%= classify(name) %>AdminResolverService,
        {
            provide: ENVIRONMENT,
            useValue: environment,
        },
        {
            provide: APP_INITIALIZER,
            useFactory: <%= classify(name) %>I18nInitializer,
            deps: [AuthenticationStateService, ENVIRONMENT, I18nUtil],
            multi: true,
        },
    ],
    bootstrap: [<%= classify(name) %>AppComponent],
})
export class <%= classify(name) %>AppModule {}
